* "Contents":index.html
* "Index":doc-index.html

 

Safe Haskell

None

NodeSnapletTest

h1. Documentation

data DHTConfig

Constructors

DHC

 

Fields

<dl>
<dt>&#95;query :: MVar ()</dt>
<dd> </dd>
<dt>&#95;ctx :: Context</dt>
<dd> </dd>
<dt>&#95;addr :: String</dt>
<dd> </dd>
<dt>&#95;pull :: Socket Pull</dt>
<dd> </dd>
<dt>&#95;req :: Socket Req</dt>
<dd> </dd>
<dt>&#95;pc :: ("RequestConfig":MemServerAsyncTest.html#t:RequestConfig, "IncomingConfig":MemServerAsyncTest.html#t:IncomingConfig, "UpdateConfig":MemServerAsyncTest.html#t:UpdateConfig)</dt>
<dd> </dd>
</dl>

Instances


|MonadState "DHTConfig":NodeSnapletTest.html#t:DHTConfig "NodeTest":NodeSnapletTest.html#t:NodeTest| |


newtype NodeTest a

Constructors

NodeTest

 

Fields

<dl>
<dt>unNodeTest :: StateT "DHTConfig":NodeSnapletTest.html#t:DHTConfig IO a</dt>
<dd> </dd>
</dl>

Instances


|Monad "NodeTest":NodeSnapletTest.html#t:NodeTest| |
|Functor "NodeTest":NodeSnapletTest.html#t:NodeTest| |
|MonadPlus "NodeTest":NodeSnapletTest.html#t:NodeTest| |
|Applicative "NodeTest":NodeSnapletTest.html#t:NodeTest| |
|MonadIO "NodeTest":NodeSnapletTest.html#t:NodeTest| |
|Alternative "NodeTest":NodeSnapletTest.html#t:NodeTest| |
|MonadState "DHTConfig":NodeSnapletTest.html#t:DHTConfig "NodeTest":NodeSnapletTest.html#t:NodeTest| |


runNodeTest :: "DHTConfig":NodeSnapletTest.html#t:DHTConfig -&gt; "NodeTest":NodeSnapletTest.html#t:NodeTest a -&gt; IO a

data NodeTestParams

Constructors

NTP

 

Fields

<dl>
<dt>nt&#95;pull :: String</dt>
<dd> </dd>
<dt>nt&#95;req :: String</dt>
<dd> </dd>
<dt>nt&#95;dump :: String</dt>
<dd> </dd>
</dl>

setupTests :: IO ()

createNodeTest :: "NodeTestParams":NodeSnapletTest.html#t:NodeTestParams -&gt; IO ()

sendQuery :: (MonadState "DHTConfig":NodeSnapletTest.html#t:DHTConfig m, MonadIO m) =&gt; "Proto":ProtoExtended.html#t:Proto -&gt; m "Proto":ProtoExtended.html#t:Proto

req :: Lens' "DHTConfig":NodeSnapletTest.html#t:DHTConfig (Socket Req)

query :: Lens' "DHTConfig":NodeSnapletTest.html#t:DHTConfig (MVar ())

pull :: Lens' "DHTConfig":NodeSnapletTest.html#t:DHTConfig (Socket Pull)

pc :: Lens' "DHTConfig":NodeSnapletTest.html#t:DHTConfig ("RequestConfig":MemServerAsyncTest.html#t:RequestConfig, "IncomingConfig":MemServerAsyncTest.html#t:IncomingConfig, "UpdateConfig":MemServerAsyncTest.html#t:UpdateConfig)

ctx :: Lens' "DHTConfig":NodeSnapletTest.html#t:DHTConfig Context

addr :: Lens' "DHTConfig":NodeSnapletTest.html#t:DHTConfig String

initDHTConfig :: FilePath -&gt; SnapletInit b "DHTConfig":NodeSnapletTest.html#t:DHTConfig

insertBinary :: (MonadIO m, MonadState "DHTConfig":NodeSnapletTest.html#t:DHTConfig m, Binary a) =&gt; ByteString -&gt; a -&gt; m "Proto":ProtoExtended.html#t:Proto

lookupBinary :: (MonadIO m, MonadState "DHTConfig":NodeSnapletTest.html#t:DHTConfig m, Binary a) =&gt; ByteString -&gt; m (Maybe a)

decodeL :: Binary c =&gt; ByteString -&gt; c

fromLazy :: Binary a =&gt; a -&gt; ByteString

toStrings :: ["Config":Config-ConfigFileParser.html#t:Config] -&gt; [String]

toString :: "Config":Config-ConfigFileParser.html#t:Config -&gt; String

Produced by "Haddock":http://www.haskell.org/haddock/ version 2.11.0
