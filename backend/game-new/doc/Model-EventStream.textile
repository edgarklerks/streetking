* "Contents":index.html
* "Index":doc-index.html

 

Safe Haskell

None

Model.EventStream

h1. Documentation

type Stream = Maybe ["Event":Data-Event.html#t:Event]

data EventStream

Constructors

EventStream

 

Fields

<dl>
<dt>id :: "Id":Model-General.html#t:Id</dt>
<dd> </dd>
<dt>account&#95;id :: "Id":Model-General.html#t:Id</dt>
<dd> </dd>
<dt>rule&#95;id :: "Id":Model-General.html#t:Id</dt>
<dd> </dd>
<dt>stream :: "Stream":Model-EventStream.html#t:Stream</dt>
<dd> </dd>
<dt>active :: Bool</dt>
<dd> </dd>
</dl>

Instances


|Eq "EventStream":Model-EventStream.html#t:EventStream| |
|Show "EventStream":Model-EventStream.html#t:EventStream| |
|ToJSON "EventStream":Model-EventStream.html#t:EventStream| |
|FromJSON "EventStream":Model-EventStream.html#t:EventStream| |
|Default "EventStream":Model-EventStream.html#t:EventStream| |
|"FromInRule":Data-InRules.html#t:FromInRule "EventStream":Model-EventStream.html#t:EventStream| |
|"ToInRule":Data-InRules.html#t:ToInRule "EventStream":Model-EventStream.html#t:EventStream| |
|"Mapable":Model-General.html#t:Mapable "EventStream":Model-EventStream.html#t:EventStream| |
|"Database":Model-General.html#t:Database "Connection":Data-SqlTransaction.html#t:Connection "EventStream":Model-EventStream.html#t:EventStream| |


relation :: "RelationM":Data-Relation.html#t:RelationM

schema :: [[Char]]

getEventStream :: Convertible a "SqlValue":Data-SqlTransaction.html#t:SqlValue =&gt; a -&gt; IO ["EventStream":Model-EventStream.html#t:EventStream]

emitEvent :: Integer -&gt; "Event":Data-Event.html#t:Event -&gt; "SqlTransaction":Data-SqlTransaction.html#t:SqlTransaction "Connection":Data-SqlTransaction.html#t:Connection ()

Produced by "Haddock":http://www.haskell.org/haddock/ version 2.11.0
