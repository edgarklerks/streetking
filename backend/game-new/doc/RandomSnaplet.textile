* "Contents":index.html
* "Index":doc-index.html

 

Safe Haskell

None

RandomSnaplet

h1. Documentation

data RandomConfig

class Variate a where

Methods

uniform :: PrimMonad m =&gt; Gen (PrimState m) -&gt; m a

uniformR :: PrimMonad m =&gt; (a, a) -&gt; Gen (PrimState m) -&gt; m a

Instances


|"Variate":RandomSnaplet.html#t:Variate Bool| |
|"Variate":RandomSnaplet.html#t:Variate Double| |
|"Variate":RandomSnaplet.html#t:Variate Float| |
|"Variate":RandomSnaplet.html#t:Variate Int| |
|"Variate":RandomSnaplet.html#t:Variate Int8| |
|"Variate":RandomSnaplet.html#t:Variate Int16| |
|"Variate":RandomSnaplet.html#t:Variate Int32| |
|"Variate":RandomSnaplet.html#t:Variate Int64| |
|"Variate":RandomSnaplet.html#t:Variate Word| |
|"Variate":RandomSnaplet.html#t:Variate Word8| |
|"Variate":RandomSnaplet.html#t:Variate Word16| |
|"Variate":RandomSnaplet.html#t:Variate Word32| |
|"Variate":RandomSnaplet.html#t:Variate Word64| |
|"Variate":RandomSnaplet.html#t:Variate (Base64 L64)| |
|"Variate":RandomSnaplet.html#t:Variate (Base64 L32)| |
|"Variate":RandomSnaplet.html#t:Variate (Base64 L16)| |
|"Variate":RandomSnaplet.html#t:Variate (Base64 L8)| |
|("Variate":RandomSnaplet.html#t:Variate a, "Variate":RandomSnaplet.html#t:Variate b) =&gt; "Variate":RandomSnaplet.html#t:Variate (a, b)| |
|("Variate":RandomSnaplet.html#t:Variate a, "Variate":RandomSnaplet.html#t:Variate b, "Variate":RandomSnaplet.html#t:Variate c) =&gt; "Variate":RandomSnaplet.html#t:Variate (a, b, c)| |
|("Variate":RandomSnaplet.html#t:Variate a, "Variate":RandomSnaplet.html#t:Variate b, "Variate":RandomSnaplet.html#t:Variate c, "Variate":RandomSnaplet.html#t:Variate d) =&gt; "Variate":RandomSnaplet.html#t:Variate (a, b, c, d)| |


getUniform :: (MonadState "RandomConfig":RandomSnaplet.html#t:RandomConfig m, MonadIO m, "Variate":RandomSnaplet.html#t:Variate a) =&gt; m a

getUniformR :: (MonadState "RandomConfig":RandomSnaplet.html#t:RandomConfig m, MonadIO m, "Variate":RandomSnaplet.html#t:Variate a) =&gt; (a, a) -&gt; m a

getUniqueKey :: (MonadState "RandomConfig":RandomSnaplet.html#t:RandomConfig m, MonadIO m) =&gt; m ByteString

initRandomSnaplet :: "Variate":RandomSnaplet.html#t:Variate (Base64 a) =&gt; a -&gt; SnapletInit b "RandomConfig":RandomSnaplet.html#t:RandomConfig

l16 :: L16

l32 :: L32

l64 :: L64

l8 :: L8

Produced by "Haddock":http://www.haskell.org/haddock/ version 2.11.0
